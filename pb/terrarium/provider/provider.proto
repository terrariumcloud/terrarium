syntax = "proto3";
package terrarium.provider;

option go_package = "github.com/terrariumcloud/terrarium/pkg/terrarium/provider";

service Publisher {
  rpc Register(RegisterProviderRequest) returns (Response) {}
  rpc EndProvider(EndProviderRequest) returns (Response) {}
}

message RegisterProviderRequest {
  string api_key = 1;
  string name = 2;
  string version = 3;
  string description = 4;
  string source_repo_url = 5;
  Maturity maturity = 6;
  repeated string protocols = 7;
  string os = 8;
  string arch = 9;
  string filename = 10;
  string download_url = 11;
  string shasums_url = 12;
  string shasums_signature_url = 13;
  string shasum = 14;
  string key_id = 15;
  string ascii_armor = 16;
  string trust_signature = 17;
  string source = 18;
  string source_url = 19;
}

enum Maturity {
  IDEA = 0;
  PLANNING = 1;
  DEVELOPING = 2;
  ALPHA = 3;
  BETA = 4;
  STABLE = 5;
  DEPRECATED = 6;
  END_OF_LIFE = 7;
}

message Response {
  string message = 1;
}

message Provider {
  string name = 1;
  string version = 2;
  string os = 3;
  string arch = 4;
}

message ProviderName {
  string name = 1;
}

message ProviderVersion {
  string name = 1;
  string version = 2;
}

message EndProviderRequest {
  ProviderName provider_name = 1;
  ProviderVersion provider_version = 2;
  Provider provider_publish = 3;
  enum Action {
    DISCARD_PROVIDER = 0;
    DISCARD_VERSION = 1;
    PUBLISH = 2;
  };
  Action action = 4;
}